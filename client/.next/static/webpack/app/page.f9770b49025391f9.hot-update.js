"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api/api-client.ts":
/*!***********************************!*\
  !*** ./src/lib/api/api-client.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Base URL configuration from environment variable or default\nconst API_URL = \"http://localhost:3001/api\" || 0;\n// Create axios instance with base configuration\nconst instance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    timeout: 15000 // 15 seconds timeout\n});\n// Request interceptor to add auth token\ninstance.interceptors.request.use((config)=>{\n    // Get token from localStorage if available\n    const token =  true ? localStorage.getItem(\"token\") : 0;\n    // Add token to headers if available\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    // Special handling for requests with file uploads\n    if (config.data && config.data instanceof FormData) {\n        config.headers[\"Content-Type\"] = \"multipart/form-data\";\n    } else if (config.data && typeof config.data !== \"string\") {\n        try {\n            // Test if data can be stringified (avoid errors with File objects)\n            JSON.stringify(config.data);\n        } catch (error) {\n            console.error(\"Invalid JSON data in request:\", error);\n            throw new Error(\"Invalid JSON data in request\");\n        }\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n// Response interceptor for handling common errors\ninstance.interceptors.response.use((response)=>{\n    // If the response has data property, return it directly\n    return response.data;\n}, (error)=>{\n    // Handle errors based on status codes\n    if (error.response) {\n        const status = error.response.status;\n        // Handle authentication errors\n        if (status === 401) {\n            // Only clear token on server auth errors, not client validation errors\n            if (error.response.config.url !== \"/auth/login\" && error.response.config.method !== \"post\") {\n                // Clear token and user data on auth error\n                if (true) {\n                    localStorage.removeItem(\"token\");\n                    localStorage.removeItem(\"user\");\n                    // If not on login page, redirect to login\n                    if (!window.location.pathname.includes(\"/auth/login\")) {\n                        // Store the current location for redirecting back after login\n                        localStorage.setItem(\"redirectAfterLogin\", window.location.pathname);\n                        window.location.href = \"/auth/login\";\n                    }\n                }\n            }\n        }\n        // Format error message with more context\n        let errorMessage;\n        if (error.response.data && typeof error.response.data === \"object\") {\n            if (\"message\" in error.response.data) {\n                errorMessage = error.response.data.message;\n            } else {\n                errorMessage = JSON.stringify(error.response.data);\n            }\n        } else {\n            errorMessage = error.message || \"Unknown error\";\n        }\n        // Enhance error object with formatted message\n        const enhancedError = new Error(errorMessage);\n        enhancedError.status = status;\n        enhancedError.data = error.response.data;\n        enhancedError.originalError = error;\n        return Promise.reject(enhancedError);\n    }\n    // Network errors, server not responding, etc.\n    if (error.request) {\n        const networkError = new Error(\"Network error. Please check your connection or try again later.\");\n        return Promise.reject(networkError);\n    }\n    // Something else caused the error\n    return Promise.reject(error);\n});\n// API client methods with types\nconst apiClient = {\n    get: async function(url) {\n        let config = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        try {\n            return await instance.get(url, config);\n        } catch (error) {\n            console.error(\"GET \".concat(url, \" failed:\"), error);\n            throw error;\n        }\n    },\n    post: async function(url) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, config = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        try {\n            return await instance.post(url, data, config);\n        } catch (error) {\n            console.error(\"POST \".concat(url, \" failed:\"), error);\n            throw error;\n        }\n    },\n    put: async function(url) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, config = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        try {\n            return await instance.put(url, data, config);\n        } catch (error) {\n            console.error(\"PUT \".concat(url, \" failed:\"), error);\n            throw error;\n        }\n    },\n    delete: async function(url) {\n        let config = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        try {\n            return await instance.delete(url, config);\n        } catch (error) {\n            console.error(\"DELETE \".concat(url, \" failed:\"), error);\n            throw error;\n        }\n    },\n    patch: async function(url) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, config = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        try {\n            return await instance.patch(url, data, config);\n        } catch (error) {\n            console.error(\"PATCH \".concat(url, \" failed:\"), error);\n            throw error;\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/api-client.ts\n"));

/***/ })

});