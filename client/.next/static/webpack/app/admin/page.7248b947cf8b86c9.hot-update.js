"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/lib/api/admin-service.ts":
/*!**************************************!*\
  !*** ./src/lib/api/admin-service.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminService: function() { return /* binding */ adminService; }\n/* harmony export */ });\n/* harmony import */ var _api_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-client */ \"(app-pages-browser)/./src/lib/api/api-client.ts\");\n\n// Export the service as a default export and as a named export for flexibility\nconst adminService = {\n    // Toggle user block status (admin only)\n    toggleUserBlock: async (userId)=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/users/\".concat(userId, \"/block\"));\n            return response.user;\n        } catch (error) {\n            console.error(\"Error toggling user block status:\", error);\n            throw error;\n        }\n    },\n    // Toggle user admin status (admin only)\n    toggleUserAdmin: async (userId)=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/users/\".concat(userId, \"/admin\"));\n            return response.user;\n        } catch (error) {\n            console.error(\"Error toggling user admin status:\", error);\n            throw error;\n        }\n    },\n    // Get all templates (admin only)\n    getAllTemplates: async ()=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/admin/templates\");\n            return response;\n        } catch (error) {\n            console.error(\"Error fetching all templates:\", error);\n            // If admin endpoint fails, try to get all templates from regular endpoint\n            try {\n                const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/templates\");\n                return response;\n            } catch (fallbackError) {\n                console.error(\"Fallback request also failed:\", fallbackError);\n                return [];\n            }\n        }\n    },\n    // Get template by ID with admin privileges (includes private templates)\n    getTemplateById: async (id)=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/admin/templates/\".concat(id));\n            return response;\n        } catch (error) {\n            console.error(\"Error fetching template \".concat(id, \" as admin:\"), error);\n            // Fall back to regular template endpoint\n            return await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/templates/\".concat(id));\n        }\n    },\n    // Update any template as admin (regardless of ownership)\n    updateTemplate: async (id, templateData)=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/admin/templates/\".concat(id), templateData);\n            return response;\n        } catch (error) {\n            console.error(\"Error updating template \".concat(id, \" as admin:\"), error);\n            throw error;\n        }\n    },\n    // Delete any template as admin (regardless of ownership)\n    deleteTemplate: async (id, version)=>{\n        try {\n            await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].delete(\"/admin/templates/\".concat(id), {\n                data: {\n                    version\n                }\n            });\n        } catch (error) {\n            console.error(\"Error deleting template \".concat(id, \" as admin:\"), error);\n            throw error;\n        }\n    },\n    // Get all form responses across the system (admin only)\n    getAllFormResponses: async function() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100, page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/admin/responses?limit=\".concat(limit, \"&page=\").concat(page));\n            return response;\n        } catch (error) {\n            console.error(\"Error fetching all form responses:\", error);\n            return [];\n        }\n    },\n    // Get all users (admin only)\n    getAllUsers: async ()=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/users\");\n            return response;\n        } catch (error) {\n            console.error(\"Error fetching all users:\", error);\n            return [];\n        }\n    },\n    // Get all topics (admin only for full access)\n    getAllTopics: async ()=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/topics\");\n            return response;\n        } catch (error) {\n            console.error(\"Error fetching topics:\", error);\n            return [];\n        }\n    },\n    // Create a new topic (admin only)\n    createTopic: async (name, description)=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/topics\", {\n                name,\n                description\n            });\n            return response;\n        } catch (error) {\n            console.error(\"Error creating topic:\", error);\n            throw error;\n        }\n    },\n    // Update a topic (admin only)\n    updateTopic: async (id, name, description, version)=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/topics/\".concat(id), {\n                name,\n                description,\n                version\n            });\n            return response;\n        } catch (error) {\n            console.error(\"Error updating topic \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    // Delete a topic (admin only)\n    deleteTopic: async (id, version)=>{\n        try {\n            await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].delete(\"/topics/\".concat(id), {\n                data: {\n                    version\n                }\n            });\n        } catch (error) {\n            console.error(\"Error deleting topic \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    // Search templates with admin privileges (includes private templates)\n    searchTemplates: async (query)=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/admin/templates/search?query=\".concat(encodeURIComponent(query)));\n            return response;\n        } catch (error) {\n            console.error(\"Error searching templates as admin:\", error);\n            // Fall back to regular search endpoint\n            try {\n                const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/templates/search?query=\".concat(encodeURIComponent(query)));\n                return response;\n            } catch (fallbackError) {\n                console.error(\"Fallback search also failed:\", fallbackError);\n                return [];\n            }\n        }\n    },\n    // Get admin dashboard stats\n    getDashboardStats: async ()=>{\n        try {\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/admin/stats\");\n            return response;\n        } catch (error) {\n            console.error(\"Error fetching admin dashboard stats:\", error);\n            return {\n                users: 0,\n                templates: 0,\n                responses: 0,\n                likes: 0,\n                comments: 0,\n                activeUsers: 0,\n                topicsCount: 0,\n                adminCount: 0\n            };\n        }\n    },\n    // Get system activity for admin dashboard\n    getSystemActivity: async function() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;\n        try {\n            const url = limit ? \"/admin/activity?limit=\".concat(limit) : \"/admin/activity\";\n            const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url);\n            return response;\n        } catch (error) {\n            console.error(\"Error fetching system activity:\", error);\n            return [];\n        }\n    }\n};\n// Export both as default and named export\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (adminService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/admin-service.ts\n"));

/***/ })

});