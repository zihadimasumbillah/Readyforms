"use strict";exports.id=996,exports.ids=[996],exports.modules={3996:(e,t,r)=>{r.d(t,{aU:()=>ew,$j:()=>eN,VY:()=>eR,dk:()=>eC,aV:()=>eb,h_:()=>ej,fC:()=>eD,Dx:()=>eA,xz:()=>eh});var o=r(7577),n=r(3095),a=r(8051),i=r(2561),l=r(8957),s=r(2067),d=r(825),u=r(441),c=r(3078),p=r(9815),f=r(5226),g=r(699),m=r(5011),v=r(5664),y=r(4214),x=r(326),D="Dialog",[h,j]=(0,n.b)(D),[b,R]=h(D),w=e=>{let{__scopeDialog:t,children:r,open:n,defaultOpen:a,onOpenChange:i,modal:d=!0}=e,u=o.useRef(null),c=o.useRef(null),[p,f]=(0,s.T)({prop:n,defaultProp:a??!1,onChange:i,caller:D});return(0,x.jsx)(b,{scope:t,triggerRef:u,contentRef:c,contentId:(0,l.M)(),titleId:(0,l.M)(),descriptionId:(0,l.M)(),open:p,onOpenChange:f,onOpenToggle:o.useCallback(()=>f(e=>!e),[f]),modal:d,children:r})};w.displayName=D;var N="DialogTrigger",A=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,n=R(N,r),l=(0,a.e)(t,n.triggerRef);return(0,x.jsx)(f.WV.button,{type:"button","aria-haspopup":"dialog","aria-expanded":n.open,"aria-controls":n.contentId,"data-state":Y(n.open),...o,ref:l,onClick:(0,i.M)(e.onClick,n.onOpenToggle)})});A.displayName=N;var C="DialogPortal",[I,O]=h(C,{forceMount:void 0}),F=e=>{let{__scopeDialog:t,forceMount:r,children:n,container:a}=e,i=R(C,t);return(0,x.jsx)(I,{scope:t,forceMount:r,children:o.Children.map(n,e=>(0,x.jsx)(p.z,{present:r||i.open,children:(0,x.jsx)(c.h,{asChild:!0,container:a,children:e})}))})};F.displayName=C;var M="DialogOverlay",E=o.forwardRef((e,t)=>{let r=O(M,e.__scopeDialog),{forceMount:o=r.forceMount,...n}=e,a=R(M,e.__scopeDialog);return a.modal?(0,x.jsx)(p.z,{present:o||a.open,children:(0,x.jsx)(P,{...n,ref:t})}):null});E.displayName=M;var _=(0,y.Z8)("DialogOverlay.RemoveScroll"),P=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,n=R(M,r);return(0,x.jsx)(m.Z,{as:_,allowPinchZoom:!0,shards:[n.contentRef],children:(0,x.jsx)(f.WV.div,{"data-state":Y(n.open),...o,ref:t,style:{pointerEvents:"auto",...o.style}})})}),$="DialogContent",W=o.forwardRef((e,t)=>{let r=O($,e.__scopeDialog),{forceMount:o=r.forceMount,...n}=e,a=R($,e.__scopeDialog);return(0,x.jsx)(p.z,{present:o||a.open,children:a.modal?(0,x.jsx)(T,{...n,ref:t}):(0,x.jsx)(V,{...n,ref:t})})});W.displayName=$;var T=o.forwardRef((e,t)=>{let r=R($,e.__scopeDialog),n=o.useRef(null),l=(0,a.e)(t,r.contentRef,n);return o.useEffect(()=>{let e=n.current;if(e)return(0,v.Ry)(e)},[]),(0,x.jsx)(k,{...e,ref:l,trapFocus:r.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:(0,i.M)(e.onCloseAutoFocus,e=>{e.preventDefault(),r.triggerRef.current?.focus()}),onPointerDownOutside:(0,i.M)(e.onPointerDownOutside,e=>{let t=e.detail.originalEvent,r=0===t.button&&!0===t.ctrlKey;(2===t.button||r)&&e.preventDefault()}),onFocusOutside:(0,i.M)(e.onFocusOutside,e=>e.preventDefault())})}),V=o.forwardRef((e,t)=>{let r=R($,e.__scopeDialog),n=o.useRef(!1),a=o.useRef(!1);return(0,x.jsx)(k,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:t=>{e.onCloseAutoFocus?.(t),t.defaultPrevented||(n.current||r.triggerRef.current?.focus(),t.preventDefault()),n.current=!1,a.current=!1},onInteractOutside:t=>{e.onInteractOutside?.(t),t.defaultPrevented||(n.current=!0,"pointerdown"!==t.detail.originalEvent.type||(a.current=!0));let o=t.target;r.triggerRef.current?.contains(o)&&t.preventDefault(),"focusin"===t.detail.originalEvent.type&&a.current&&t.preventDefault()}})}),k=o.forwardRef((e,t)=>{let{__scopeDialog:r,trapFocus:n,onOpenAutoFocus:i,onCloseAutoFocus:l,...s}=e,c=R($,r),p=o.useRef(null),f=(0,a.e)(t,p);return(0,g.EW)(),(0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)(u.M,{asChild:!0,loop:!0,trapped:n,onMountAutoFocus:i,onUnmountAutoFocus:l,children:(0,x.jsx)(d.XB,{role:"dialog",id:c.contentId,"aria-describedby":c.descriptionId,"aria-labelledby":c.titleId,"data-state":Y(c.open),...s,ref:f,onDismiss:()=>c.onOpenChange(!1)})}),(0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)(G,{titleId:c.titleId}),(0,x.jsx)(J,{contentRef:p,descriptionId:c.descriptionId})]})]})}),S="DialogTitle",z=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,n=R(S,r);return(0,x.jsx)(f.WV.h2,{id:n.titleId,...o,ref:t})});z.displayName=S;var B="DialogDescription",Z=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,n=R(B,r);return(0,x.jsx)(f.WV.p,{id:n.descriptionId,...o,ref:t})});Z.displayName=B;var q="DialogClose",U=o.forwardRef((e,t)=>{let{__scopeDialog:r,...o}=e,n=R(q,r);return(0,x.jsx)(f.WV.button,{type:"button",...o,ref:t,onClick:(0,i.M)(e.onClick,()=>n.onOpenChange(!1))})});function Y(e){return e?"open":"closed"}U.displayName=q;var H="DialogTitleWarning",[K,X]=(0,n.k)(H,{contentName:$,titleName:S,docsSlug:"dialog"}),G=({titleId:e})=>{let t=X(H),r=`\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;return o.useEffect(()=>{e&&!document.getElementById(e)&&console.error(r)},[r,e]),null},J=({contentRef:e,descriptionId:t})=>{let r=X("DialogDescriptionWarning"),n=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${r.contentName}}.`;return o.useEffect(()=>{let r=e.current?.getAttribute("aria-describedby");t&&r&&!document.getElementById(t)&&console.warn(n)},[n,e,t]),null},L="AlertDialog",[Q,ee]=(0,n.b)(L,[j]),et=j(),er=e=>{let{__scopeAlertDialog:t,...r}=e,o=et(t);return(0,x.jsx)(w,{...o,...r,modal:!0})};er.displayName=L;var eo=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=et(r);return(0,x.jsx)(A,{...n,...o,ref:t})});eo.displayName="AlertDialogTrigger";var en=e=>{let{__scopeAlertDialog:t,...r}=e,o=et(t);return(0,x.jsx)(F,{...o,...r})};en.displayName="AlertDialogPortal";var ea=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=et(r);return(0,x.jsx)(E,{...n,...o,ref:t})});ea.displayName="AlertDialogOverlay";var ei="AlertDialogContent",[el,es]=Q(ei),ed=(0,y.sA)("AlertDialogContent"),eu=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,children:n,...l}=e,s=et(r),d=o.useRef(null),u=(0,a.e)(t,d),c=o.useRef(null);return(0,x.jsx)(K,{contentName:ei,titleName:ec,docsSlug:"alert-dialog",children:(0,x.jsx)(el,{scope:r,cancelRef:c,children:(0,x.jsxs)(W,{role:"alertdialog",...s,...l,ref:u,onOpenAutoFocus:(0,i.M)(l.onOpenAutoFocus,e=>{e.preventDefault(),c.current?.focus({preventScroll:!0})}),onPointerDownOutside:e=>e.preventDefault(),onInteractOutside:e=>e.preventDefault(),children:[(0,x.jsx)(ed,{children:n}),(0,x.jsx)(ex,{contentRef:d})]})})})});eu.displayName=ei;var ec="AlertDialogTitle",ep=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=et(r);return(0,x.jsx)(z,{...n,...o,ref:t})});ep.displayName=ec;var ef="AlertDialogDescription",eg=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=et(r);return(0,x.jsx)(Z,{...n,...o,ref:t})});eg.displayName=ef;var em=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,n=et(r);return(0,x.jsx)(U,{...n,...o,ref:t})});em.displayName="AlertDialogAction";var ev="AlertDialogCancel",ey=o.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...o}=e,{cancelRef:n}=es(ev,r),i=et(r),l=(0,a.e)(t,n);return(0,x.jsx)(U,{...i,...o,ref:l})});ey.displayName=ev;var ex=({contentRef:e})=>{let t=`\`${ei}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${ei}\` by passing a \`${ef}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${ei}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return o.useEffect(()=>{document.getElementById(e.current?.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},eD=er,eh=eo,ej=en,eb=ea,eR=eu,ew=em,eN=ey,eA=ep,eC=eg}};